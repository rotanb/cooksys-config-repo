server: 
  port: 8760

eureka:
  client:
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}} 
    registerWithEureka: true
    fetchRegistry: true

serviceManager:
  docker:
      host: localhost
      port: 8000
  docker-image-prefix: tndavidson
  jmxMonitorTimerInterval: 5000
  load-simulator-sleep-interval: 700
  enable-docker: false
  enable-auto-bootstrap: true
  newServiceRegistrationTimeout: 300000
  redisHost: ip-172-31-30-255.us-west-2.compute.internal
  redisPort: 9000
  tempJarDirectory: "/tmp/jars"
  serviceConfig:
    ############## CSRT Core Processes: #############
    discovery: 
      sslEnabled: false
      discovery-client: true 
      version: "SNAPSHOT" 
      ports: 
        - "8761" 
      bootstrapHosts: 
        - "ip-172-31-30-255.us-west-2.compute.internal"
        - "ip-172-31-30-254.us-west-2.compute.internal"
        - "ip-172-31-30-253.us-west-2.compute.internal"
    router:
      sslEnabled: false
      discovery-client: true 
      version: "SNAPSHOT" 
      ports: 
        - "8765" 
      bootstrapHosts: 
        - "ip-172-31-30-255.us-west-2.compute.internal"
        - "ip-172-31-30-254.us-west-2.compute.internal"
        - "ip-172-31-30-253.us-west-2.compute.internal"
    turbine:
      sslEnabled: false
      discovery-client: true
      version: "SNAPSHOT" 
      ports: 
        - "8766"
      bootstrapHosts:
        - "ip-172-31-30-255.us-west-2.compute.internal"
    query-service: 
      sslEnabled: false
      discovery-client: true 
      version: "SNAPSHOT"
      ports: 
        - "8762" 
      bootstrapHosts: 
        - "ip-172-31-30-253.us-west-2.compute.internal"
    redis-query-service:
      sslEnabled: false
      discovery-client: true
      version: "SNAPSHOT"
      ports: 
        - "8763"
      bootstrapHosts: 
        - "ip-172-31-30-254.us-west-2.compute.internal"
